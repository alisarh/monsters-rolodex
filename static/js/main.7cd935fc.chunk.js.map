{"version":3,"sources":["logo.svg","components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handlChange","type","onChange","App","state","searchField","fetch","then","response","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","toLocaleLowerCase","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iTAAe,I,YCIFA,EAAO,SAAAC,GAAK,OACjB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,4BACR,mCAA6BJ,EAAMG,QAAQE,KAA3C,MAASL,EAAMG,QAAQC,IACvB,mCAAMJ,EAAMG,QAAQG,MAApB,WCJCC,G,MAAW,SAAAP,GAAK,OACzB,qBAAKC,UAAU,YAAf,SAEQD,EAAMQ,SAASC,KAAI,SAAAN,GAAO,OAC1B,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCJlBM,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAcC,EAAhB,EAAgBA,YAAhB,OACrB,uBAAOX,UAAU,SAASY,KAAK,SAASF,YAAaA,EACpDG,SAAWF,MC2BDG,G,wDA1Bb,aAAc,IAAD,8BACX,gBACKC,MAAQ,CACXR,SAAU,GACVS,YAAa,IAJJ,E,qDAOf,WAAoB,IAAD,OACjBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAU,CAACf,SAAUc,S,oBAEzC,WAAU,IAAD,SAC2BE,KAAKR,MAA/BR,EADD,EACCA,SAAWS,EADZ,EACYA,YACbQ,EAAmBjB,EAASkB,QAC/B,SAAAvB,GAAO,OAAIA,EAAQE,KAAKsB,cAAcC,SAASX,EAAYY,wBAC9D,OACE,sBAAK5B,UAAU,MAAf,UACE,cAAC,EAAD,CAAWU,YAAY,mBAAmBC,YAAc,SAAAkB,GAAC,OAAI,EAAKP,SAAS,CAAEN,YAAca,EAAEC,OAAOC,WAClG,cAAC,EAAD,CAAUxB,SAAUiB,W,GApBZQ,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7cd935fc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\r\n\r\nimport './card.style.css';\r\n\r\nexport const Card = props => (\r\n        <div className=\"card-container\">\r\n            <img src={`https://robohash.org/${props.monster.id}?set=set1&size=180x180`} />\r\n            <h1 key={props.monster.id}> {props.monster.name} </h1>\r\n            <h5> {props.monster.email} </h5>\r\n\r\n        </div>\r\n  \r\n)","import React from \"react\";\r\nimport { Card } from '../card/card.component';\r\nimport './card-list.style.css';\r\n\r\nexport const CardList = props => (\r\n    <div className=\"card-list\">\r\n        {\r\n            props.monsters.map(monster => (\r\n            <Card key={monster.id} monster={monster} />\r\n    ))}\r\n\r\n    </div>\r\n  \r\n)","import React from \"react\";\r\n\r\nimport './search-box.style.css';\r\n\r\nexport const SearchBox = ({placeholder , handlChange}) => (\r\n    <input className=\"search\" type=\"search\" placeholder={placeholder}\r\n     onChange={ handlChange} />\r\n)","import logo from './logo.svg';\nimport {CardList} from './components/card-list/card-list.component';\nimport { SearchBox  } from './components/search-box/search-box.component';\nimport './App.css';\nimport { Component } from 'react';\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n  }\ncomponentDidMount(){\n  fetch(\"https://jsonplaceholder.typicode.com/users\")\n  .then(response => response.json())\n  .then(users => this.setState( {monsters: users}))\n}\n  render() {\n    const { monsters , searchField} = this.state;\n    const filteredMonsters = monsters.filter(\n       monster => monster.name.toLowerCase().includes(searchField.toLocaleLowerCase()))\n    return(\n      <div className=\"App\">\n        <SearchBox placeholder=\"search a monster\" handlChange={ e => this.setState({ searchField : e.target.value})} />\n          <CardList monsters={filteredMonsters} />\n       \n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}